{"version":3,"sources":["index.js"],"names":["StopWatch","constructor","currentDate","convertResult","Date","now","startDate","sec","Math","floor","min","hours","console","log","refs","textContent","id","setInterval","calc","clearInterval","start","document","querySelector","stop","timerStart","bind","timerStop","init","addEventListener","watch"],"mappings":";;;AAqFA,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EArFA,QAAA,oBAUA,MAAMA,EACFC,cAeO,EAAA,KAAA,OAAA,KACGC,MAEAC,GAFcC,KAAKC,MACG,KAAKC,WACH,IACxBC,EAAMC,KAAKC,MAAMN,EAAgB,IACjCO,EAAMF,KAAKC,MAAMN,EAAgB,IACjCQ,EAAQH,KAAKC,MAAMN,EAAgB,GAAK,IAC9CS,QAAQC,IAAIF,GACPG,KAAAA,KAAKP,IAAIQ,YAAcR,EAAM,OAASA,IAAQA,EAC9CO,KAAAA,KAAKJ,IAAIK,YAAcL,EAAM,OAASA,IAAQA,IAE1C,EAAA,KAAA,aAAA,KACJJ,KAAAA,UAAYF,KAAKC,MACjBW,KAAAA,GAAKC,YAAY,KAAKC,KAAM,OAEzB,EAAA,KAAA,YAAA,KACRC,cAAc,KAAKH,MA9BdF,KAAAA,KAAO,CACRM,MAAOC,SAASC,cAAc,UAC9BC,KAAMF,SAASC,cAAc,SAC7Bf,IAAKc,SAASC,cAAc,YAC5BZ,IAAKW,SAASC,cAAc,YAC5BX,MAAOU,SAASC,cAAc,WAG7BN,KAAAA,GAAK,KACLV,KAAAA,UAAY,KACZkB,KAAAA,WAAa,KAAKA,WAAWC,KAAK,MAClCC,KAAAA,UAAY,KAAKA,UAAUD,KAAK,MAqBzCE,OACSb,KAAAA,KAAKM,MAAMQ,iBAAiB,QAAS,KAAKJ,YAC1CV,KAAAA,KAAKS,KAAKK,iBAAiB,QAAS,KAAKF,YAItD,MAAMG,EAAQ,IAAI7B,EAClB6B,EAAMF","file":"src.e751971d.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\n\n// console.log(new Date(\"1995-12-17T03:24:00\"));\n\n// for (let i = 3; i > 0; i--) {\n//     setTimeout(() => console.log(i), i * 1000);\n// }\n///////////////////////////////////////////////////////\n\nclass StopWatch {\n    constructor() {\n        this.refs = {\n            start: document.querySelector('#start'),\n            stop: document.querySelector('#stop'),\n            sec: document.querySelector('.seconds'),\n            min: document.querySelector('.minutes'),\n            hours: document.querySelector('.hours'),\n        };\n\n        this.id = null;\n        this.startDate = null;\n        this.timerStart = this.timerStart.bind(this)\n        this.timerStop = this.timerStop.bind(this)\n        \n    }\n    calc = () => {\n        const currentDate = Date.now();\n        const delta = currentDate - this.startDate;\n        const convertResult = delta / 1000;\n        const sec = Math.floor(convertResult % 60);\n        const min = Math.floor(convertResult / 60);\n        const hours = Math.floor(convertResult / 60 / 60);\n        console.log(hours);\n        this.refs.sec.textContent = sec < 10 ? `0${sec}` : sec;\n        this.refs.min.textContent = min < 10 ? `0${min}` : min;\n    }\n    timerStart = () => {\n        this.startDate = Date.now();\n        this.id = setInterval(this.calc, 1000);\n};\n    timerStop = () => {\n        clearInterval(this.id)\n};\n    init() {\n        this.refs.start.addEventListener('click', this.timerStart);\n        this.refs.stop.addEventListener('click', this.timerStop);\n    }\n}\n\nconst watch = new StopWatch();\nwatch.init();\n\n// const refs = {\n//     start: document.querySelector('#start'),\n//     stop: document.querySelector('#stop'),\n//     sec: document.querySelector('.seconds'),\n//     min: document.querySelector('.minutes'),\n// }\n// зафиксировать дату старта\n// посчитать сколько времени прошло от старта\n\n// let id = null;\n// let startDate = null;\n\n// function calc() {\n//     const currentDate = Date.now();\n//     const delta = currentDate - startDate;\n//     const convertResult = delta / 1000;\n//     const sec = Math.floor(convertResult % 60);\n//     const min = Math.floor(convertResult / 60);\n//     refs.sec.textContent = sec < 10 ? `0${sec}` : sec;\n//     refs.min.textContent = min < 10 ? `0${min}` : min;\n//     // console.log(Math.floor(delta/1000));\n// }\n\n// function timerStart() {\n//     startDate = Date.now();\n//     id = setInterval(calc, 1000);\n// }\n// function timerStop() {\n//     clearInterval(id)\n// }\n\n// refs.start.addEventListener('click', timerStart)\n// refs.stop.addEventListener('click', timerStop)"]}